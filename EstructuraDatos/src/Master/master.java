/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Master;
import estructuradatos.*;
import java.awt.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.*;

public class master extends javax.swing.JFrame {

    private Arbol arbol;
    private List<Nodo> recorridoNodos;
    private Timer timer;
    private int currentNodeIndex;

    public master() {
        arbol = new Arbol();
        initComponents();
        customizeComponents();
    }

    private void customizeComponents() {
        this.setTitle("Árbol Binario Visualizador");
        this.getContentPane().setBackground(new Color(230, 230, 250)); // Lavanda claro

        estilizarBoton(agregar);
        estilizarBoton(eliminar);
        estilizarBoton(inOrden);
        estilizarBoton(preOrden);
        estilizarBoton(postOrden);
        estilizarBoton(reiniciar);
        estilizarBoton(resetear);

        jTextField4.setBorder(BorderFactory.createLineBorder(new Color(70, 130, 180)));
        jTextField4.setFont(new Font("Arial", Font.PLAIN, 14));

        jTextArea1.setBorder(BorderFactory.createLineBorder(new Color(70, 130, 180)));
        jTextArea1.setFont(new Font("Arial", Font.PLAIN, 14));
        jTextArea1.setBackground(new Color(240, 248, 255)); // Azul claro

        jPanel1.setBackground(new Color(240, 248, 255)); // Azul claro
    }

    private void estilizarBoton(JButton boton) {
        boton.setBackground(new Color(70, 130, 180)); // Azul acero
        boton.setForeground(Color.WHITE);
        boton.setFont(new Font("Arial", Font.BOLD, 12));
        boton.setBorder(BorderFactory.createRaisedBevelBorder());
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregar = new javax.swing.JButton();
        jPanel1 = new DrawingPanel();
        reiniciar = new javax.swing.JButton();
        resetear = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        inOrden = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        preOrden = new javax.swing.JButton();
        postOrden = new javax.swing.JButton();
        agregar2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        agregar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        agregar.setLabel("Agregar");
        agregar.setName(""); // NOI18N
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 661, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        reiniciar.setLabel("Reiniciar");
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });

        resetear.setLabel("Resetear");
        resetear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetearActionPerformed(evt);
            }
        });

        eliminar.setLabel("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        inOrden.setLabel("InOrden");
        inOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inOrdenActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        preOrden.setLabel("PreOrden");
        preOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preOrdenActionPerformed(evt);
            }
        });

        postOrden.setLabel("PostOrden");
        postOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postOrdenActionPerformed(evt);
            }
        });

        agregar2.setText("Opciones de Recorrido");
        agregar2.setName(""); // NOI18N
        agregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar2AgregarActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        agregar1.setText("INTERFAZ GRAFICA DE ARBOLES");
        agregar1.setName(""); // NOI18N
        agregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar1AgregarActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Recorrido Inorden \n\nEn este recorrido, se visita primero el subárbol izquierdo, luego la raíz y finalmente el subárbol derecho.\n\nRegla: Izquierda, Raíz, Derecha.");
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("Recorrido Preorden \nEn este recorrido, se visita primero la raíz, luego el subárbol izquierdo y finalmente el subárbol derecho.\n\nRegla: Raíz, Izquierda, Derecha.");
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setText("Recorrido Postorden \nEn este recorrido, se visita primero el subárbol izquierdo, luego el subárbol derecho y finalmente la raíz.\n\nRegla: Izquierda, Derecha, Raíz.");
        jScrollPane4.setViewportView(jTextArea4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(agregar1)
                .addGap(468, 468, 468))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(agregar)
                        .addGap(18, 18, 18)
                        .addComponent(eliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reiniciar)
                        .addGap(18, 18, 18)
                        .addComponent(resetear)
                        .addGap(80, 80, 80))
                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(137, Short.MAX_VALUE)
                        .addComponent(agregar2)
                        .addGap(257, 257, 257))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(inOrden)
                                    .addGap(75, 75, 75)
                                    .addComponent(preOrden)
                                    .addGap(56, 56, 56)
                                    .addComponent(postOrden))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(agregar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(eliminar)
                    .addComponent(reiniciar)
                    .addComponent(resetear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(agregar2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inOrden)
                            .addComponent(preOrden)
                            .addComponent(postOrden))
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
          try {
            int valor = Integer.parseInt(jTextField4.getText());
            arbol.agregar(valor);
            ((DrawingPanel) jPanel1).actualizarArbol(arbol);
            jTextField4.setText("");
            jPanel1.repaint();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AgregarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
       try {
            int valor = Integer.parseInt(jTextField4.getText());
            arbol.eliminar(valor);
            ((DrawingPanel) jPanel1).actualizarArbol(arbol);
            jTextField4.setText("");
            jPanel1.repaint();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void inOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inOrdenActionPerformed
        arbol.inOrden(jTextArea1);
        iniciarAnimacion(arbol.getInOrdenNodos());
    }//GEN-LAST:event_inOrdenActionPerformed

    private void preOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preOrdenActionPerformed
        arbol.preOrden(jTextArea1);
        iniciarAnimacion(arbol.getPreOrdenNodos());
    }//GEN-LAST:event_preOrdenActionPerformed

    private void postOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postOrdenActionPerformed
        arbol.postOrden(jTextArea1);
        iniciarAnimacion(arbol.getPostOrdenNodos());
    }//GEN-LAST:event_postOrdenActionPerformed

    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        if (timer != null) {
            timer.cancel();
        }
        currentNodeIndex = 0;
        ((DrawingPanel) jPanel1).resetColors();
        jPanel1.repaint();
    }//GEN-LAST:event_reiniciarActionPerformed

    private void resetearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetearActionPerformed
        arbol = new Arbol();
        ((DrawingPanel) jPanel1).actualizarArbol(arbol);
        jTextArea1.setText("");
        jPanel1.repaint();
    }//GEN-LAST:event_resetearActionPerformed

    private void agregar2AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar2AgregarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agregar2AgregarActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void agregar1AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar1AgregarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agregar1AgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    private void iniciarAnimacion(List<Nodo> recorrido) {
        if (timer != null) {
            timer.cancel();
        }

        recorridoNodos = recorrido;
        currentNodeIndex = 0;

        timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                if (currentNodeIndex < recorridoNodos.size()) {
                    Nodo nodo = recorridoNodos.get(currentNodeIndex);
                    ((DrawingPanel) jPanel1).highlightNode(nodo);
                    jPanel1.repaint();
                    currentNodeIndex++;
                } else {
                    timer.cancel();
                }
            }
        }, 0, 1000);
    }
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> new master().setVisible(true));
    }
    
    class DrawingPanel extends JPanel {
        private Arbol arbol;
        private Map<Nodo, Color> nodeColors;

        public DrawingPanel() {
            this.nodeColors = new HashMap<>();
        }

        public void actualizarArbol(Arbol arbol) {
            this.arbol = arbol;
            this.nodeColors.clear();
            for (Nodo nodo : arbol.getInOrdenNodos()) {
                nodeColors.put(nodo, Color.BLACK);
            }
        }

        public void highlightNode(Nodo nodo) {
            nodeColors.put(nodo, Color.RED);
        }

        public void resetColors() {
            for (Nodo nodo : nodeColors.keySet()) {
                nodeColors.put(nodo, Color.BLACK);
            }
        }

        @Override
 protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            setBackground(new Color(240, 248, 255)); // Fondo azul claro
            if (arbol != null && arbol.getRaiz() != null) {
                drawTree(g, getWidth() / 2, 30, arbol.getRaiz(), getWidth() / 4, 60);
            }
        }

        private void drawTree(Graphics g, int x, int y, Nodo nodo, int xOffset, int yOffset) {
            if (nodo != null) {
                Graphics2D g2d = (Graphics2D) g;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                // Dibujar nodo
                g2d.setColor(nodeColors.getOrDefault(nodo, new Color(100, 149, 237))); // Azul cornil
                g2d.fillOval(x - 20, y - 20, 40, 40);
                g2d.setColor(Color.WHITE);
                g2d.setFont(new Font("Arial", Font.BOLD, 14));
                g2d.drawString(String.valueOf(nodo.getValor()), x - 7, y + 5);

                // Dibujar conexiones
                g2d.setColor(new Color(70, 130, 180)); // Azul acero
                g2d.setStroke(new BasicStroke(2));

                if (nodo.getIzquierda() != null) {
                    g2d.drawLine(x - 15, y + 15, x - xOffset + 15, y + yOffset - 15);
                    drawTree(g, x - xOffset, y + yOffset, nodo.getIzquierda(), xOffset / 2, yOffset);
                }

                if (nodo.getDerecha() != null) {
                    g2d.drawLine(x + 15, y + 15, x + xOffset - 15, y + yOffset - 15);
                    drawTree(g, x + xOffset, y + yOffset, nodo.getDerecha(), xOffset / 2, yOffset);
                }
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton agregar1;
    private javax.swing.JButton agregar2;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton inOrden;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton postOrden;
    private javax.swing.JButton preOrden;
    private javax.swing.JButton reiniciar;
    private javax.swing.JButton resetear;
    // End of variables declaration//GEN-END:variables
}
